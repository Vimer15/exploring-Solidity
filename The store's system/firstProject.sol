// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract MyShop //Объявление контракта
{
    address public owner; //Данная переменная будет хранить адресс
    mapping (address => uint) public  payments; //тут будет хранить информацию о плательщике ключ:значение
    constructor()//Конструтор вызывается автоматически при создании контракта
    //Вызывается однократно
    {
        owner = msg.sender;//Вернет адресс отправителя
        //Получается так:
        //тот кто развернул контракт = владелец
    }
    function payFotItem() public payable //Объявление функции
    //payable - модификатор для принятия денег 
    {
        //В теле функции ничего писать не нужно
        //Так как деньги будут зачислены на счет контракта

        //Ниже будет записан код
        payments[msg.sender] = msg.value; // Будем хранить количетсво денег в контракте
        //и от кого 
    }

    function withdrawAll() public //В этой функции будем списывать деньги
    //которые хроняться в контракте
    {
        address payable _to = payable (owner);//После того как контракт сработает
        //переменная _to - не будет активна, до следующего его вызова
        uint256 balance = address(this).balance;//Указывает этот адресс контракта и получаем баланс
        _to.transfer(balance);
    }

}